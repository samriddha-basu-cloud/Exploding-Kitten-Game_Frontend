{"ast":null,"code":"var _jsxFileName = \"/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [deck, setDeck] = useState([]); // Define deck state variable\n  const [counter, setCounter] = useState(0); // Define counter state variable\n\n  const handleNameSubmit = name => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n    setDeck(Array.from({\n      length: 5\n    }, (_, index) => index + 1)); // Initialize deck\n  };\n  const handleCardFlip = cardType => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        if (deck.length > 0) {\n          setDeck(deck.slice(0, -1));\n        }\n        break;\n      case 'defuse':\n        if (deck.length > 0) {\n          setDeck(deck.slice(0, -1));\n          setCounter(counter + 1); // Increment counter\n        }\n        break;\n      case 'exploding':\n        if (counter > 0) {\n          setCounter(counter - 1); // Decrement counter\n        } else {\n          setGameStarted(false); // End game if counter is 0\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n        }\n        if (deck.length > 0) {\n          setDeck(deck.slice(0, -1));\n        }\n        break;\n      case 'shuffle':\n        setDeck(Array.from({\n          length: 5\n        }, (_, index) => index + 1));\n        setCounter(0);\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        userName: userName,\n        points: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), toastMessage && /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(NameForm, {\n      onNameSubmit: handleNameSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s/jV5yCGbwZSpaU/d6YMJ7Rchxo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","CardBlock","Toast","NameForm","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","points","setPoints","toastMessage","setToastMessage","userName","setUserName","gameStarted","setGameStarted","deck","setDeck","counter","setCounter","handleNameSubmit","name","Array","from","length","_","index","handleCardFlip","cardType","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardFlip","message","onNameSubmit","_c","$RefreshReg$"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport axios from 'axios';\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [deck, setDeck] = useState([]); // Define deck state variable\n  const [counter, setCounter] = useState(0); // Define counter state variable\n\n  const handleNameSubmit = (name) => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n    setDeck(Array.from({ length: 5 }, (_, index) => index + 1)); // Initialize deck\n  };\n\n  const handleCardFlip = (cardType) => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        if (deck.length > 0) {\n          setDeck(deck.slice(0, -1));\n        }\n        break;\n      case 'defuse':\n        if (deck.length > 0) {\n          setDeck(deck.slice(0, -1));\n          setCounter(counter + 1); // Increment counter\n        }\n        break;\n      case 'exploding':\n        if (counter > 0) {\n          setCounter(counter - 1); // Decrement counter\n        } else {\n          setGameStarted(false); // End game if counter is 0\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n        }\n        if (deck.length > 0) {\n          setDeck(deck.slice(0, -1));\n        }\n        break;\n      case 'shuffle':\n        setDeck(Array.from({ length: 5 }, (_, index) => index + 1));\n        setCounter(0);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {gameStarted ? (\n        <>\n          <Navbar userName={userName} points={points} />\n          <div className=\"card-container\">\n            <CardBlock onCardFlip={handleCardFlip} />\n            <CardBlock onCardFlip={handleCardFlip} />\n            <CardBlock onCardFlip={handleCardFlip} />\n            <CardBlock onCardFlip={handleCardFlip} />\n            <CardBlock onCardFlip={handleCardFlip} />\n          </div>\n          {toastMessage && <Toast message={toastMessage} />}\n        </>\n      ) : (\n        <NameForm onNameSubmit={handleNameSubmit} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}