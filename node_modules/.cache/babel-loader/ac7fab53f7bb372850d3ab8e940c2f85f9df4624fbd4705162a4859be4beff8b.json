{"ast":null,"code":"var _jsxFileName = \"/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const handleNameSubmit = name => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n  const handleCardFlip = cardType => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        // Remove cat card from the deck\n        removeCardFromDeck('cat');\n        setToastMessage('You gained a point!');\n        break;\n      case 'defuse':\n        // Remove defuse card from the deck\n        removeCardFromDeck('defuse');\n        // Increment counter c\n        setC(c + 1);\n        setToastMessage('You gained a defuse card!');\n        break;\n      case 'exploding':\n        // Check if the counter c is greater than or equal to the number of exploding cards\n        if (c >= numExplodingCards) {\n          // Remove exploding card from the deck\n          removeCardFromDeck('exploding');\n          setToastMessage('You defused an exploding kitten!');\n        } else {\n          // Game Over: Exploding card drawn\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n        }\n        break;\n      case 'shuffle':\n        // Restart the game by resetting the deck and counter c\n        resetGame();\n        setToastMessage('Game restarted! Shuffling the deck...');\n        break;\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n  };\n  const removeCardFromDeck = cardType => {\n    // Remove the card from the deck with a slow transition\n    // Implement the transition logic here\n    // For example, you can remove the card after a setTimeout\n    setTimeout(() => {\n      // Update the deck by removing the card\n      // Update the database if necessary\n      // For now, let's assume you have functions to update the deck and database\n      updateDeck();\n      updateDatabase();\n    }, 1000); // Adjust the duration as needed\n  };\n  const resetGame = () => {\n    // Reset the deck and counter c\n    // Implement the reset logic here\n    // For now, let's assume you have functions to reset the deck and counter\n    resetDeck();\n    resetCounter();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        points: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), toastMessage && /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(NameForm, {\n      onNameSubmit: handleNameSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gtapoJgPbmbCP53FCG/zL27gURI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","CardBlock","Toast","NameForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","points","setPoints","toastMessage","setToastMessage","userName","setUserName","gameStarted","setGameStarted","handleNameSubmit","name","handleCardFlip","cardType","removeCardFromDeck","setC","c","numExplodingCards","resetGame","setTimeout","updateDeck","updateDatabase","resetDeck","resetCounter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardFlip","message","onNameSubmit","_c","$RefreshReg$"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n\n  const handleNameSubmit = (name) => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n\n  const handleCardFlip = (cardType) => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        // Remove cat card from the deck\n        removeCardFromDeck('cat');\n        setToastMessage('You gained a point!');\n        break;\n      case 'defuse':\n        // Remove defuse card from the deck\n        removeCardFromDeck('defuse');\n        // Increment counter c\n        setC(c + 1);\n        setToastMessage('You gained a defuse card!');\n        break;\n      case 'exploding':\n        // Check if the counter c is greater than or equal to the number of exploding cards\n        if (c >= numExplodingCards) {\n          // Remove exploding card from the deck\n          removeCardFromDeck('exploding');\n          setToastMessage('You defused an exploding kitten!');\n        } else {\n          // Game Over: Exploding card drawn\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n        }\n        break;\n      case 'shuffle':\n        // Restart the game by resetting the deck and counter c\n        resetGame();\n        setToastMessage('Game restarted! Shuffling the deck...');\n        break;\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n  };\n  \n  const removeCardFromDeck = (cardType) => {\n    // Remove the card from the deck with a slow transition\n    // Implement the transition logic here\n    // For example, you can remove the card after a setTimeout\n    setTimeout(() => {\n      // Update the deck by removing the card\n      // Update the database if necessary\n      // For now, let's assume you have functions to update the deck and database\n      updateDeck();\n      updateDatabase();\n    }, 1000); // Adjust the duration as needed\n  };\n  \n  const resetGame = () => {\n    // Reset the deck and counter c\n    // Implement the reset logic here\n    // For now, let's assume you have functions to reset the deck and counter\n    resetDeck();\n    resetCounter();\n  };\n  \n\n  return (\n    <div className=\"App\">\n      {gameStarted ? (\n        <>\n          <Navbar points={points} />\n          <div className=\"card-container\">\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n          </div>\n          {toastMessage && <Toast message={toastMessage} />}\n        </>\n      ) : (\n        <NameForm onNameSubmit={handleNameSubmit} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMmB,gBAAgB,GAAIC,IAAI,IAAK;IACjCJ,WAAW,CAACI,IAAI,CAAC;IACjBF,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMG,cAAc,GAAIC,QAAQ,IAAK;IACnC;IACA,QAAQA,QAAQ;MACd,KAAK,KAAK;QACR;QACAC,kBAAkB,CAAC,KAAK,CAAC;QACzBT,eAAe,CAAC,qBAAqB,CAAC;QACtC;MACF,KAAK,QAAQ;QACX;QACAS,kBAAkB,CAAC,QAAQ,CAAC;QAC5B;QACAC,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC;QACXX,eAAe,CAAC,2BAA2B,CAAC;QAC5C;MACF,KAAK,WAAW;QACd;QACA,IAAIW,CAAC,IAAIC,iBAAiB,EAAE;UAC1B;UACAH,kBAAkB,CAAC,WAAW,CAAC;UAC/BT,eAAe,CAAC,kCAAkC,CAAC;QACrD,CAAC,MAAM;UACL;UACAF,SAAS,CAAC,CAAC,CAAC;UACZE,eAAe,CAAC,0CAA0C,CAAC;QAC7D;QACA;MACF,KAAK,SAAS;QACZ;QACAa,SAAS,CAAC,CAAC;QACXb,eAAe,CAAC,uCAAuC,CAAC;QACxD;MACF;QACEA,eAAe,CAAC,0BAA0B,CAAC;QAC3C;IACJ;EACF,CAAC;EAED,MAAMS,kBAAkB,GAAID,QAAQ,IAAK;IACvC;IACA;IACA;IACAM,UAAU,CAAC,MAAM;MACf;MACA;MACA;MACAC,UAAU,CAAC,CAAC;MACZC,cAAc,CAAC,CAAC;IAClB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMH,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA;IACA;IACAI,SAAS,CAAC,CAAC;IACXC,YAAY,CAAC,CAAC;EAChB,CAAC;EAGD,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBjB,WAAW,gBACVX,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACE5B,OAAA,CAACL,MAAM;QAACU,MAAM,EAAEA;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1BhC,OAAA;QAAK2B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B5B,OAAA,CAACJ,SAAS;UAACa,QAAQ,EAAEA,QAAS;UAACwB,UAAU,EAAElB;QAAe;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7DhC,OAAA,CAACJ,SAAS;UAACa,QAAQ,EAAEA,QAAS;UAACwB,UAAU,EAAElB;QAAe;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7DhC,OAAA,CAACJ,SAAS;UAACa,QAAQ,EAAEA,QAAS;UAACwB,UAAU,EAAElB;QAAe;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7DhC,OAAA,CAACJ,SAAS;UAACa,QAAQ,EAAEA,QAAS;UAACwB,UAAU,EAAElB;QAAe;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7DhC,OAAA,CAACJ,SAAS;UAACa,QAAQ,EAAEA,QAAS;UAACwB,UAAU,EAAElB;QAAe;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,EACLzB,YAAY,iBAAIP,OAAA,CAACH,KAAK;QAACqC,OAAO,EAAE3B;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACjD,CAAC,gBAEHhC,OAAA,CAACF,QAAQ;MAACqC,YAAY,EAAEtB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC5C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5B,EAAA,CA1FQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA4FZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}