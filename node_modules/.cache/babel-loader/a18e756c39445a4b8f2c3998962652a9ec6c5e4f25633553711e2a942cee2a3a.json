{"ast":null,"code":"// App.js\nimport React,{useState}from'react';import'./App.css';import Navbar from'./components/Navbar';import CardBlock from'./components/CardBlock';import Toast from'./components/Toast';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[points,setPoints]=useState(0);const[toastMessage,setToastMessage]=useState('');const handleCardFlip=cardType=>{// Logic for handling card flip and updating points\nswitch(cardType){case'defuse':setPoints(points+1);setToastMessage('You gained a point!');break;case'exploding':setPoints(0);setToastMessage('Game Over! You drew an exploding kitten.');break;// Add more cases for other card types as needed\ndefault:setToastMessage('Card drawn successfully!');break;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Navbar,{points:points}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-container\",children:[/*#__PURE__*/_jsx(CardBlock,{onCardFlip:handleCardFlip}),/*#__PURE__*/_jsx(CardBlock,{onCardFlip:handleCardFlip}),/*#__PURE__*/_jsx(CardBlock,{onCardFlip:handleCardFlip}),/*#__PURE__*/_jsx(CardBlock,{onCardFlip:handleCardFlip}),/*#__PURE__*/_jsx(CardBlock,{onCardFlip:handleCardFlip})]}),toastMessage&&/*#__PURE__*/_jsx(Toast,{message:toastMessage})]});}export default App;","map":{"version":3,"names":["React","useState","Navbar","CardBlock","Toast","jsx","_jsx","jsxs","_jsxs","App","points","setPoints","toastMessage","setToastMessage","handleCardFlip","cardType","className","children","onCardFlip","message"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n\n  const handleCardFlip = (cardType) => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'defuse':\n        setPoints(points + 1);\n        setToastMessage('You gained a point!');\n        break;\n      case 'exploding':\n        setPoints(0);\n        setToastMessage('Game Over! You drew an exploding kitten.');\n        break;\n      // Add more cases for other card types as needed\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar points={points} />\n      <div className=\"card-container\">\n        <CardBlock onCardFlip={handleCardFlip} />\n        <CardBlock onCardFlip={handleCardFlip} />\n        <CardBlock onCardFlip={handleCardFlip} />\n        <CardBlock onCardFlip={handleCardFlip} />\n        <CardBlock onCardFlip={handleCardFlip} />\n      </div>\n      {toastMessage && <Toast message={toastMessage} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CACvC,KAAM,CAACW,YAAY,CAAEC,eAAe,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEpD,KAAM,CAAAa,cAAc,CAAIC,QAAQ,EAAK,CACnC;AACA,OAAQA,QAAQ,EACd,IAAK,QAAQ,CACXJ,SAAS,CAACD,MAAM,CAAG,CAAC,CAAC,CACrBG,eAAe,CAAC,qBAAqB,CAAC,CACtC,MACF,IAAK,WAAW,CACdF,SAAS,CAAC,CAAC,CAAC,CACZE,eAAe,CAAC,0CAA0C,CAAC,CAC3D,MACF;AACA,QACEA,eAAe,CAAC,0BAA0B,CAAC,CAC3C,MACJ,CACF,CAAC,CAED,mBACEL,KAAA,QAAKQ,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBX,IAAA,CAACJ,MAAM,EAACQ,MAAM,CAAEA,MAAO,CAAE,CAAC,cAC1BF,KAAA,QAAKQ,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BX,IAAA,CAACH,SAAS,EAACe,UAAU,CAAEJ,cAAe,CAAE,CAAC,cACzCR,IAAA,CAACH,SAAS,EAACe,UAAU,CAAEJ,cAAe,CAAE,CAAC,cACzCR,IAAA,CAACH,SAAS,EAACe,UAAU,CAAEJ,cAAe,CAAE,CAAC,cACzCR,IAAA,CAACH,SAAS,EAACe,UAAU,CAAEJ,cAAe,CAAE,CAAC,cACzCR,IAAA,CAACH,SAAS,EAACe,UAAU,CAAEJ,cAAe,CAAE,CAAC,EACtC,CAAC,CACLF,YAAY,eAAIN,IAAA,CAACF,KAAK,EAACe,OAAO,CAAEP,YAAa,CAAE,CAAC,EAC9C,CAAC,CAEV,CAEA,cAAe,CAAAH,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}