{"ast":null,"code":"var _jsxFileName = \"/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [counter, setCounter] = useState(0); // Define counter\n  const NUM_EXPLODING_CARDS = 2; // Define number of exploding cards\n  const INITIAL_DECK = ['cat', 'cat', 'cat', 'defuse', 'exploding']; // Define initial deck of cards\n  const [deck, setDeck] = useState([...INITIAL_DECK]); // Define deck of cards\n\n  const handleNameSubmit = name => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n  const handleCardFlip = cardType => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        setPoints(points + 1);\n        setToastMessage('You gained a point!');\n        break;\n      case 'defuse':\n        setPoints(points + 1);\n        setCounter(prevCounter => prevCounter + 1); // Increment counter\n        setToastMessage('You gained a point and defused a bomb!');\n        break;\n      case 'exploding':\n        if (counter >= NUM_EXPLODING_CARDS) {\n          setPoints(points + 1);\n          setToastMessage('You gained a point by defusing an exploding kitten!');\n        } else {\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n        }\n        break;\n      case 'shuffle':\n        setToastMessage('Game Restarted! Shuffling cards...');\n        setCounter(0);\n        setDeck([...INITIAL_DECK]);\n        break;\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        points: points,\n        userName: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), toastMessage && /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(NameForm, {\n      onNameSubmit: handleNameSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iLXAiK0xozoyir7kBiFw292aLh4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","CardBlock","Toast","NameForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","points","setPoints","toastMessage","setToastMessage","userName","setUserName","gameStarted","setGameStarted","counter","setCounter","NUM_EXPLODING_CARDS","INITIAL_DECK","deck","setDeck","handleNameSubmit","name","handleCardFlip","cardType","prevCounter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardFlip","message","onNameSubmit","_c","$RefreshReg$"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [counter, setCounter] = useState(0); // Define counter\n  const NUM_EXPLODING_CARDS = 2; // Define number of exploding cards\n  const INITIAL_DECK = ['cat', 'cat', 'cat', 'defuse', 'exploding']; // Define initial deck of cards\n  const [deck, setDeck] = useState([...INITIAL_DECK]); // Define deck of cards\n\n  const handleNameSubmit = (name) => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n\n  const handleCardFlip = (cardType) => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        setPoints(points + 1);\n        setToastMessage('You gained a point!');\n        break;\n      case 'defuse':\n        setPoints(points + 1);\n        setCounter((prevCounter) => prevCounter + 1); // Increment counter\n        setToastMessage('You gained a point and defused a bomb!');\n        break;\n      case 'exploding':\n        if (counter >= NUM_EXPLODING_CARDS) {\n          setPoints(points + 1);\n          setToastMessage('You gained a point by defusing an exploding kitten!');\n        } else {\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n        }\n        break;\n      case 'shuffle':\n        setToastMessage('Game Restarted! Shuffling cards...');\n        setCounter(0);\n        setDeck([...INITIAL_DECK]);\n        break;\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {gameStarted ? (\n        <>\n          <Navbar points={points} userName={userName} /> {/* Pass userName to Navbar */}\n          <div className=\"card-container\">\n            <CardBlock onCardFlip={handleCardFlip} />\n            <CardBlock onCardFlip={handleCardFlip} />\n            <CardBlock onCardFlip={handleCardFlip} />\n            <CardBlock onCardFlip={handleCardFlip} />\n            <CardBlock onCardFlip={handleCardFlip} />\n          </div>\n          {toastMessage && <Toast message={toastMessage} />}\n        </>\n      ) : (\n        <NameForm onNameSubmit={handleNameSubmit} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}