{"ast":null,"code":"var _jsxFileName = \"/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [userPoints, setUserPoints] = useState(0);\n  const [remainingCards, setRemainingCards] = useState(5);\n  const [defuseCounter, setDefuseCounter] = useState(0);\n  useEffect(() => {\n    // Fetch user points when the component mounts\n    const fetchUserPoints = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/user/points?name=${userName}`);\n        setUserPoints(response.data);\n      } catch (error) {\n        console.error('Error fetching user points:', error);\n      }\n    };\n    if (userName) {\n      fetchUserPoints();\n    }\n  }, [userName]);\n  const handleNameSubmit = name => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n  const handleCardFlip = cardType => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        if (remainingCards > 0) {\n          setRemainingCards(remainingCards - 1);\n        }\n        break;\n      case 'defuse':\n        if (remainingCards > 0) {\n          setRemainingCards(remainingCards - 1);\n          setDefuseCounter(defuseCounter + 1);\n        }\n        break;\n      case 'exploding':\n        if (defuseCounter > 0) {\n          setDefuseCounter(defuseCounter - 1);\n          setRemainingCards(remainingCards - 1);\n        } else {\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n        }\n        break;\n      case 'shuffle':\n        setRemainingCards(5);\n        setDefuseCounter(0);\n        break;\n      default:\n        break;\n    }\n\n    // Increase user points if all cards are flipped\n    if (remainingCards === 0) {\n      setPoints(points + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        userName: userName,\n        userPoints: userPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: handleCardFlip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), toastMessage && /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(NameForm, {\n      onNameSubmit: handleNameSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4MpffrPy90ys910lvE6qlD344Vo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","CardBlock","Toast","NameForm","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","points","setPoints","toastMessage","setToastMessage","userName","setUserName","gameStarted","setGameStarted","userPoints","setUserPoints","remainingCards","setRemainingCards","defuseCounter","setDefuseCounter","fetchUserPoints","response","get","data","error","console","handleNameSubmit","name","handleCardFlip","cardType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardFlip","message","onNameSubmit","_c","$RefreshReg$"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport axios from 'axios';\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [userPoints, setUserPoints] = useState(0);\n  const [remainingCards, setRemainingCards] = useState(5);\n  const [defuseCounter, setDefuseCounter] = useState(0);\n\n  useEffect(() => {\n    // Fetch user points when the component mounts\n    const fetchUserPoints = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/user/points?name=${userName}`);\n        setUserPoints(response.data);\n      } catch (error) {\n        console.error('Error fetching user points:', error);\n      }\n    };\n\n    if (userName) {\n      fetchUserPoints();\n    }\n  }, [userName]);\n\n  const handleNameSubmit = (name) => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n\n  const handleCardFlip = (cardType) => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        if (remainingCards > 0) {\n          setRemainingCards(remainingCards - 1);\n        }\n        break;\n      case 'defuse':\n        if (remainingCards > 0) {\n          setRemainingCards(remainingCards - 1);\n          setDefuseCounter(defuseCounter + 1);\n        }\n        break;\n      case 'exploding':\n        if (defuseCounter > 0) {\n          setDefuseCounter(defuseCounter - 1);\n          setRemainingCards(remainingCards - 1);\n        } else {\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n        }\n        break;\n      case 'shuffle':\n        setRemainingCards(5);\n        setDefuseCounter(0);\n        break;\n      default:\n        break;\n    }\n\n    // Increase user points if all cards are flipped\n    if (remainingCards === 0) {\n      setPoints(points + 1);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {gameStarted ? (\n        <>\n          <Navbar userName={userName} userPoints={userPoints} />\n          <div className=\"card-container\">\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n            <CardBlock userName={userName} onCardFlip={handleCardFlip} />\n          </div>\n          {toastMessage && <Toast message={toastMessage} />}\n        </>\n      ) : (\n        <NameForm onNameSubmit={handleNameSubmit} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}