{"ast":null,"code":"var _jsxFileName = \"/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    if (gameStarted) {\n      generateCards();\n    }\n  }, [gameStarted]);\n  const generateCards = () => {\n    const cardTypes = ['cat', 'defuse', 'exploding', 'shuffle'];\n    const newCards = Array.from({\n      length: 5\n    }, () => {\n      return cardTypes[Math.floor(Math.random() * cardTypes.length)];\n    });\n    setCards(newCards);\n  };\n  const handleNameSubmit = name => {\n    setUserName(name);\n    setGameStarted(true);\n  };\n  const handleCardFlip = (index, cardType) => {\n    setTimeout(() => {\n      switch (cardType) {\n        case 'defuse':\n          setPoints(points + 1);\n          setToastMessage('You gained a point!');\n          break;\n        case 'exploding':\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n          break;\n        default:\n          setToastMessage('Card drawn successfully!');\n          break;\n      }\n      const newCards = [...cards];\n      newCards.splice(index, 1); // Remove the card from the array\n      setCards(newCards);\n    }, 3000); // Wait for 3 seconds before removing the card\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        points: points,\n        userName: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(CardBlock, {\n          cardType: card,\n          index: index,\n          onCardFlip: handleCardFlip\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), toastMessage && /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(NameForm, {\n      onNameSubmit: handleNameSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5CLin9b0JNphXBG1oiVWZtyx1FQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","CardBlock","Toast","NameForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","points","setPoints","toastMessage","setToastMessage","userName","setUserName","gameStarted","setGameStarted","cards","setCards","generateCards","cardTypes","newCards","Array","from","length","Math","floor","random","handleNameSubmit","name","handleCardFlip","index","cardType","setTimeout","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","onCardFlip","message","onNameSubmit","_c","$RefreshReg$"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    if (gameStarted) {\n      generateCards();\n    }\n  }, [gameStarted]);\n\n  const generateCards = () => {\n    const cardTypes = ['cat', 'defuse', 'exploding', 'shuffle'];\n    const newCards = Array.from({ length: 5 }, () => {\n      return cardTypes[Math.floor(Math.random() * cardTypes.length)];\n    });\n    setCards(newCards);\n  };\n\n  const handleNameSubmit = (name) => {\n    setUserName(name);\n    setGameStarted(true);\n  };\n\n  const handleCardFlip = (index, cardType) => {\n    setTimeout(() => {\n      switch (cardType) {\n        case 'defuse':\n          setPoints(points + 1);\n          setToastMessage('You gained a point!');\n          break;\n        case 'exploding':\n          setPoints(0);\n          setToastMessage('Game Over! You drew an exploding kitten.');\n          break;\n        default:\n          setToastMessage('Card drawn successfully!');\n          break;\n      }\n\n      const newCards = [...cards];\n      newCards.splice(index, 1); // Remove the card from the array\n      setCards(newCards);\n    }, 3000); // Wait for 3 seconds before removing the card\n  };\n\n  return (\n    <div className=\"App\">\n      {gameStarted ? (\n        <>\n          <Navbar points={points} userName={userName}/>\n          <div className=\"card-container\">\n            {cards.map((card, index) => (\n              <CardBlock key={index} cardType={card} index={index} onCardFlip={handleCardFlip} />\n            ))}\n          </div>\n          {toastMessage && <Toast message={toastMessage} />}\n        </>\n      ) : (\n        <NameForm onNameSubmit={handleNameSubmit} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}