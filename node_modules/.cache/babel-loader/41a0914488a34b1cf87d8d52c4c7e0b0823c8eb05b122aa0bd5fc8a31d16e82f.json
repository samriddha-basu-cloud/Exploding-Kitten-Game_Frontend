{"ast":null,"code":"var _jsxFileName = \"/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens/src/components/CardBlock.js\",\n  _s = $RefreshSig$();\n// CardBlock.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardBlock({\n  onCardFlip\n}) {\n  _s();\n  const [flipped, setFlipped] = useState(false);\n  const [cardType, setCardType] = useState('');\n  const handleClick = () => {\n    setFlipped(true);\n    // Generate random card type (for demonstration purpose)\n    const cardTypes = ['cat', 'defuse', 'exploding', 'shuffle'];\n    const randomCardType = cardTypes[Math.floor(Math.random() * cardTypes.length)];\n    setCardType(randomCardType);\n    onCardFlip(randomCardType);\n  };\n  const getBackImage = () => {\n    switch (cardType) {\n      case 'cat':\n        return require('/../assets/cat1.png').default;\n      case 'defuse':\n        return require('/../assets/cat2.png').default;\n      case 'shuffle':\n        return require('/../assets/cat3.png').default;\n      case 'exploding':\n        return require('/../assets/cat4.png').default;\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card-block ${flipped ? 'flipped' : ''}`,\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-front\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-back\",\n      style: {\n        backgroundImage: `url(${getBackImage()})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(CardBlock, \"dWDkTge9t68CMkwerSsbfHkbBEg=\");\n_c = CardBlock;\nexport default CardBlock;\nvar _c;\n$RefreshReg$(_c, \"CardBlock\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CardBlock","onCardFlip","_s","flipped","setFlipped","cardType","setCardType","handleClick","cardTypes","randomCardType","Math","floor","random","length","getBackImage","require","default","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","_c","$RefreshReg$"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens/src/components/CardBlock.js"],"sourcesContent":["// CardBlock.js\nimport React, { useState } from 'react';\n\nfunction CardBlock({ onCardFlip }) {\n  const [flipped, setFlipped] = useState(false);\n  const [cardType, setCardType] = useState('');\n\n  const handleClick = () => {\n    setFlipped(true);\n    // Generate random card type (for demonstration purpose)\n    const cardTypes = ['cat', 'defuse', 'exploding', 'shuffle'];\n    const randomCardType = cardTypes[Math.floor(Math.random() * cardTypes.length)];\n    setCardType(randomCardType);\n    onCardFlip(randomCardType);\n  };\n\n  const getBackImage = () => {\n    switch (cardType) {\n      case 'cat':\n        return require('/../assets/cat1.png').default;\n      case 'defuse':\n        return require('/../assets/cat2.png').default;\n      case 'shuffle':\n        return require('/../assets/cat3.png').default;\n      case 'exploding':\n        return require('/../assets/cat4.png').default;\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className={`card-block ${flipped ? 'flipped' : ''}`} onClick={handleClick}>\n      <div className=\"card-front\"></div>\n      <div className=\"card-back\" style={{ backgroundImage: `url(${getBackImage()})` }}></div>\n    </div>\n  );\n}\n\nexport default CardBlock;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBH,UAAU,CAAC,IAAI,CAAC;IAChB;IACA,MAAMI,SAAS,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAC;IAC3D,MAAMC,cAAc,GAAGD,SAAS,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,SAAS,CAACK,MAAM,CAAC,CAAC;IAC9EP,WAAW,CAACG,cAAc,CAAC;IAC3BR,UAAU,CAACQ,cAAc,CAAC;EAC5B,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,QAAQT,QAAQ;MACd,KAAK,KAAK;QACR,OAAOU,OAAO,CAAC,qBAAqB,CAAC,CAACC,OAAO;MAC/C,KAAK,QAAQ;QACX,OAAOD,OAAO,CAAC,qBAAqB,CAAC,CAACC,OAAO;MAC/C,KAAK,SAAS;QACZ,OAAOD,OAAO,CAAC,qBAAqB,CAAC,CAACC,OAAO;MAC/C,KAAK,WAAW;QACd,OAAOD,OAAO,CAAC,qBAAqB,CAAC,CAACC,OAAO;MAC/C;QACE,OAAO,EAAE;IACb;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAG,cAAad,OAAO,GAAG,SAAS,GAAG,EAAG,EAAE;IAACe,OAAO,EAAEX,WAAY;IAAAY,QAAA,gBAC7EpB,OAAA;MAAKkB,SAAS,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClCxB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAACO,KAAK,EAAE;QAAEC,eAAe,EAAG,OAAMX,YAAY,CAAC,CAAE;MAAG;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV;AAACrB,EAAA,CAlCQF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}