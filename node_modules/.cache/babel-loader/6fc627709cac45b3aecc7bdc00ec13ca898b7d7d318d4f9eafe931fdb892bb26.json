{"ast":null,"code":"var _jsxFileName = \"/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [userPoints, setUserPoints] = useState(0);\n  const [deck, setDeck] = useState(['cat', 'cat', 'cat', 'cat', 'cat']);\n  const [defuseCounter, setDefuseCounter] = useState(0);\n  useEffect(() => {\n    // Fetch user points when the component mounts\n    const fetchUserPoints = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/user/points?name=${userName}`);\n        setUserPoints(response.data);\n      } catch (error) {\n        console.error('Error fetching user points:', error);\n      }\n    };\n    if (userName) {\n      fetchUserPoints();\n    }\n  }, [userName]);\n  const handleNameSubmit = name => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n  const handleCardFlip = cardType => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        handleCatCard();\n        break;\n      case 'defuse':\n        handleDefuseCard();\n        break;\n      case 'exploding':\n        handleExplodingCard();\n        break;\n      case 'shuffle':\n        handleShuffleCard();\n        break;\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n  };\n  const handleCatCard = () => {\n    const updatedDeck = [...deck];\n    updatedDeck.pop(); // Remove the last card from the deck\n    setDeck(updatedDeck);\n    checkAndUpdatePoints();\n  };\n  const handleDefuseCard = () => {\n    const updatedDeck = [...deck];\n    updatedDeck.pop(); // Remove the last card from the deck\n    setDeck(updatedDeck);\n    setDefuseCounter(defuseCounter + 1);\n    checkAndUpdatePoints();\n  };\n  const handleExplodingCard = () => {\n    if (defuseCounter > 0) {\n      setDefuseCounter(defuseCounter - 1);\n    } else {\n      setPoints(0);\n      setToastMessage('Game Over! You drew an exploding kitten.');\n      resetGame();\n    }\n  };\n  const handleShuffleCard = () => {\n    setDeck(['cat', 'cat', 'cat', 'cat', 'cat']);\n    setDefuseCounter(0);\n  };\n  const checkAndUpdatePoints = () => {\n    if (deck.length === 0) {\n      setPoints(points + 1);\n      resetGame();\n    }\n  };\n  const resetGame = () => {\n    setDeck(['cat', 'cat', 'cat', 'cat', 'cat']);\n    setGameStarted(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        userName: userName,\n        userPoints: userPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: deck.map((card, index) => /*#__PURE__*/_jsxDEV(CardBlock, {\n          cardType: card,\n          onCardFlip: handleCardFlip\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), toastMessage && /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(NameForm, {\n      onNameSubmit: handleNameSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8i+kcQLTpVvJDmoMyjm/CbGlm7g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","CardBlock","Toast","NameForm","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","points","setPoints","toastMessage","setToastMessage","userName","setUserName","gameStarted","setGameStarted","userPoints","setUserPoints","deck","setDeck","defuseCounter","setDefuseCounter","fetchUserPoints","response","get","data","error","console","handleNameSubmit","name","handleCardFlip","cardType","handleCatCard","handleDefuseCard","handleExplodingCard","handleShuffleCard","updatedDeck","pop","checkAndUpdatePoints","resetGame","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","onCardFlip","message","onNameSubmit","_c","$RefreshReg$"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport axios from 'axios';\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [userPoints, setUserPoints] = useState(0);\n  const [deck, setDeck] = useState(['cat', 'cat', 'cat', 'cat', 'cat']);\n  const [defuseCounter, setDefuseCounter] = useState(0);\n\n  useEffect(() => {\n    // Fetch user points when the component mounts\n    const fetchUserPoints = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/user/points?name=${userName}`);\n        setUserPoints(response.data);\n      } catch (error) {\n        console.error('Error fetching user points:', error);\n      }\n    };\n\n    if (userName) {\n      fetchUserPoints();\n    }\n  }, [userName]);\n\n  const handleNameSubmit = (name) => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n\n  const handleCardFlip = (cardType) => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'cat':\n        handleCatCard();\n        break;\n      case 'defuse':\n        handleDefuseCard();\n        break;\n      case 'exploding':\n        handleExplodingCard();\n        break;\n      case 'shuffle':\n        handleShuffleCard();\n        break;\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n  };\n\n  const handleCatCard = () => {\n    const updatedDeck = [...deck];\n    updatedDeck.pop(); // Remove the last card from the deck\n    setDeck(updatedDeck);\n    checkAndUpdatePoints();\n  };\n\n  const handleDefuseCard = () => {\n    const updatedDeck = [...deck];\n    updatedDeck.pop(); // Remove the last card from the deck\n    setDeck(updatedDeck);\n    setDefuseCounter(defuseCounter + 1);\n    checkAndUpdatePoints();\n  };\n\n  const handleExplodingCard = () => {\n    if (defuseCounter > 0) {\n      setDefuseCounter(defuseCounter - 1);\n    } else {\n      setPoints(0);\n      setToastMessage('Game Over! You drew an exploding kitten.');\n      resetGame();\n    }\n  };\n\n  const handleShuffleCard = () => {\n    setDeck(['cat', 'cat', 'cat', 'cat', 'cat']);\n    setDefuseCounter(0);\n  };\n\n  const checkAndUpdatePoints = () => {\n    if (deck.length === 0) {\n      setPoints(points + 1);\n      resetGame();\n    }\n  };\n\n  const resetGame = () => {\n    setDeck(['cat', 'cat', 'cat', 'cat', 'cat']);\n    setGameStarted(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {gameStarted ? (\n        <>\n          <Navbar userName={userName} userPoints={userPoints} />\n          <div className=\"card-container\">\n            {deck.map((card, index) => (\n              <CardBlock key={index} cardType={card} onCardFlip={handleCardFlip} />\n            ))}\n          </div>\n          {toastMessage && <Toast message={toastMessage} />}\n        </>\n      ) : (\n        <NameForm onNameSubmit={handleNameSubmit} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}