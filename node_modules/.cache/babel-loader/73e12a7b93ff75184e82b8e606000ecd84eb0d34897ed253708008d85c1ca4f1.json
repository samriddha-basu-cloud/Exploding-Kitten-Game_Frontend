{"ast":null,"code":"var _jsxFileName = \"/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport WelcomePage from './components/WelcomePage';\nimport GamePage from './components/GamePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [playerName, setPlayerName] = useState('');\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const handleCardFlip = cardType => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'defuse':\n        setPoints(points + 1);\n        setToastMessage('You gained a point!');\n        break;\n      case 'exploding':\n        setPoints(0);\n        setToastMessage('Game Over! You drew an exploding kitten.');\n        break;\n      // Add more cases for other card types as needed\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        points: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(WelcomePage, {\n            setPlayerName: setPlayerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/game\",\n          children: /*#__PURE__*/_jsxDEV(GamePage, {\n            playerName: playerName,\n            handleCardFlip: handleCardFlip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), toastMessage && /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"djiYKNbxBSkeHNcGG2EXSOsCF2U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Navbar","CardBlock","Toast","WelcomePage","GamePage","jsxDEV","_jsxDEV","App","_s","playerName","setPlayerName","points","setPoints","toastMessage","setToastMessage","handleCardFlip","cardType","children","className","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","message","_c","$RefreshReg$"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport WelcomePage from './components/WelcomePage';\nimport GamePage from './components/GamePage';\n\nfunction App() {\n  const [playerName, setPlayerName] = useState('');\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n\n  const handleCardFlip = (cardType) => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'defuse':\n        setPoints(points + 1);\n        setToastMessage('You gained a point!');\n        break;\n      case 'exploding':\n        setPoints(0);\n        setToastMessage('Game Over! You drew an exploding kitten.');\n        break;\n      // Add more cases for other card types as needed\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar points={points} />\n        <Switch>\n          <Route exact path=\"/\">\n            <WelcomePage setPlayerName={setPlayerName} />\n          </Route>\n          <Route path=\"/game\">\n            <GamePage playerName={playerName} handleCardFlip={handleCardFlip} />\n          </Route>\n        </Switch>\n        {toastMessage && <Toast message={toastMessage} />}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMoB,cAAc,GAAIC,QAAQ,IAAK;IACnC;IACA,QAAQA,QAAQ;MACd,KAAK,QAAQ;QACXJ,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;QACrBG,eAAe,CAAC,qBAAqB,CAAC;QACtC;MACF,KAAK,WAAW;QACdF,SAAS,CAAC,CAAC,CAAC;QACZE,eAAe,CAAC,0CAA0C,CAAC;QAC3D;MACF;MACA;QACEA,eAAe,CAAC,0BAA0B,CAAC;QAC3C;IACJ;EACF,CAAC;EAED,oBACER,OAAA,CAACT,MAAM;IAAAoB,QAAA,eACLX,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBX,OAAA,CAACN,MAAM;QAACW,MAAM,EAAEA;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1BhB,OAAA,CAACP,MAAM;QAAAkB,QAAA,gBACLX,OAAA,CAACR,KAAK;UAACyB,KAAK;UAACC,IAAI,EAAC,GAAG;UAAAP,QAAA,eACnBX,OAAA,CAACH,WAAW;YAACO,aAAa,EAAEA;UAAc;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,eACRhB,OAAA,CAACR,KAAK;UAAC0B,IAAI,EAAC,OAAO;UAAAP,QAAA,eACjBX,OAAA,CAACF,QAAQ;YAACK,UAAU,EAAEA,UAAW;YAACM,cAAc,EAAEA;UAAe;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EACRT,YAAY,iBAAIP,OAAA,CAACJ,KAAK;QAACuB,OAAO,EAAEZ;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACd,EAAA,CAvCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}