{"ast":null,"code":"// // App.js\n// import React, { useState } from 'react';\n// import './App.css';\n// import Navbar from './components/Navbar';\n// import CardBlock from './components/CardBlock';\n// import Toast from './components/Toast';\n// import NameForm from './components/NameForm';\n\n// function App() {\n//   const [points, setPoints] = useState(0);\n//   const [toastMessage, setToastMessage] = useState('');\n//   const [userName, setUserName] = useState('');\n//   const [gameStarted, setGameStarted] = useState(false);\n\n//   const handleNameSubmit = (name) => {\n//     setUserName(name);\n//     setGameStarted(true); // Set gameStarted to true once the user submits the name\n//   };\n\n//   const handleCardFlip = (cardType) => {\n//     // Logic for handling card flip and updating points\n//     switch (cardType) {\n//       case 'defuse':\n//       case 'cat':\n//         setPoints(points + 1);\n//         setToastMessage('You gained a point!');\n//         break;\n//       case 'exploding':\n//         setPoints(0);\n//         setToastMessage('Game Over! You drew an exploding kitten.');\n//         break;\n//       default:\n//         setToastMessage('Card drawn successfully!');\n//         break;\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {gameStarted ? (\n//         <>\n//           <Navbar points={points} />\n//           <div className=\"card-container\">\n//             <CardBlock onCardFlip={handleCardFlip} />\n//             <CardBlock onCardFlip={handleCardFlip} />\n//             <CardBlock onCardFlip={handleCardFlip} />\n//             <CardBlock onCardFlip={handleCardFlip} />\n//             <CardBlock onCardFlip={handleCardFlip} />\n//           </div>\n//           {toastMessage && <Toast message={toastMessage} />}\n//         </>\n//       ) : (\n//         <NameForm onNameSubmit={handleNameSubmit} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js"],"sourcesContent":["// // App.js\n// import React, { useState } from 'react';\n// import './App.css';\n// import Navbar from './components/Navbar';\n// import CardBlock from './components/CardBlock';\n// import Toast from './components/Toast';\n// import NameForm from './components/NameForm';\n\n// function App() {\n//   const [points, setPoints] = useState(0);\n//   const [toastMessage, setToastMessage] = useState('');\n//   const [userName, setUserName] = useState('');\n//   const [gameStarted, setGameStarted] = useState(false);\n\n//   const handleNameSubmit = (name) => {\n//     setUserName(name);\n//     setGameStarted(true); // Set gameStarted to true once the user submits the name\n//   };\n\n//   const handleCardFlip = (cardType) => {\n//     // Logic for handling card flip and updating points\n//     switch (cardType) {\n//       case 'defuse':\n//       case 'cat':\n//         setPoints(points + 1);\n//         setToastMessage('You gained a point!');\n//         break;\n//       case 'exploding':\n//         setPoints(0);\n//         setToastMessage('Game Over! You drew an exploding kitten.');\n//         break;\n//       default:\n//         setToastMessage('Card drawn successfully!');\n//         break;\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {gameStarted ? (\n//         <>\n//           <Navbar points={points} />\n//           <div className=\"card-container\">\n//             <CardBlock onCardFlip={handleCardFlip} />\n//             <CardBlock onCardFlip={handleCardFlip} />\n//             <CardBlock onCardFlip={handleCardFlip} />\n//             <CardBlock onCardFlip={handleCardFlip} />\n//             <CardBlock onCardFlip={handleCardFlip} />\n//           </div>\n//           {toastMessage && <Toast message={toastMessage} />}\n//         </>\n//       ) : (\n//         <NameForm onNameSubmit={handleNameSubmit} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}