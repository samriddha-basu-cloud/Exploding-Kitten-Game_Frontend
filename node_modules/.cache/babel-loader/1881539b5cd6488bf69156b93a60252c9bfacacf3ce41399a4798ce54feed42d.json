{"ast":null,"code":"var _jsxFileName = \"/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const handleNameSubmit = name => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n  const handleCardFlip = (cardType, cardIndex) => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'defuse':\n      case 'cat':\n        setPoints(points + 1);\n        setToastMessage('You gained a point!');\n        break;\n      case 'exploding':\n        setPoints(0);\n        setToastMessage('Game Over! You drew an exploding kitten.');\n        break;\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n    setFlippedCards([...flippedCards, cardIndex]);\n\n    // Remove flipped card after delay\n    setTimeout(() => {\n      setFlippedCards(flippedCards.filter(index => index !== cardIndex));\n    }, 500); // 0.5 second delay\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        points: points,\n        userName: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [0, 1, 2, 3, 4].map(index => /*#__PURE__*/_jsxDEV(CardBlock, {\n          userName: userName,\n          onCardFlip: cardType => handleCardFlip(cardType, index),\n          isFlipped: flippedCards.includes(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), toastMessage && /*#__PURE__*/_jsxDEV(Toast, {\n        message: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(NameForm, {\n      onNameSubmit: handleNameSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nNhKh+ytDjir1vy4Cx4ewN+8WUg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","CardBlock","Toast","NameForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","points","setPoints","toastMessage","setToastMessage","userName","setUserName","gameStarted","setGameStarted","flippedCards","setFlippedCards","handleNameSubmit","name","handleCardFlip","cardType","cardIndex","setTimeout","filter","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onCardFlip","isFlipped","includes","message","onNameSubmit","_c","$RefreshReg$"],"sources":["/Users/samriddha_basu/Desktop/Exploding Kitten game/Exploding Kitten Frontend/exploding-kittens-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport CardBlock from './components/CardBlock';\nimport Toast from './components/Toast';\nimport NameForm from './components/NameForm';\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  const [toastMessage, setToastMessage] = useState('');\n  const [userName, setUserName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [flippedCards, setFlippedCards] = useState([]);\n\n  const handleNameSubmit = (name) => {\n    setUserName(name);\n    setGameStarted(true); // Set gameStarted to true once the user submits the name\n  };\n\n  const handleCardFlip = (cardType, cardIndex) => {\n    // Logic for handling card flip and updating points\n    switch (cardType) {\n      case 'defuse':\n      case 'cat':\n        setPoints(points + 1);\n        setToastMessage('You gained a point!');\n        break;\n      case 'exploding':\n        setPoints(0);\n        setToastMessage('Game Over! You drew an exploding kitten.');\n        break;\n      default:\n        setToastMessage('Card drawn successfully!');\n        break;\n    }\n    setFlippedCards([...flippedCards, cardIndex]);\n\n    // Remove flipped card after delay\n    setTimeout(() => {\n      setFlippedCards(flippedCards.filter(index => index !== cardIndex));\n    }, 500); // 0.5 second delay\n  };\n\n\n  return (\n    <div className=\"App\">\n      {gameStarted ? (\n        <>\n          <Navbar points={points} userName={userName}/>\n          <div className=\"card-container\">\n            {[0, 1, 2, 3, 4].map(index => (\n              <CardBlock \n                key={index} \n                userName={userName} \n                onCardFlip={(cardType) => handleCardFlip(cardType, index)} \n                isFlipped={flippedCards.includes(index)}\n              />\n            ))}\n          </div>\n          {toastMessage && <Toast message={toastMessage} />}\n        </>\n      ) : (\n        <NameForm onNameSubmit={handleNameSubmit} />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}